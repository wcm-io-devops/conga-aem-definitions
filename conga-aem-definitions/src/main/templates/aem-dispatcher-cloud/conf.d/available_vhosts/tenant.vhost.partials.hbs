{{!-- Contains configuration snippets that can be used when building the vhost template --}}

{{~#block "customVHostConfigBefore"}}
{{#if httpd.customVHostConfig.before ~}}
#### Custom configuration (before) ####

{{httpd.customVHostConfig.before}}
{{~/if}}
{{/block}}


{{~#block "serverName"}}
{{#httpdCloudManagerConditional}}
# Primary hostname
ServerName {{httpd.serverName}}
{{/httpdCloudManagerConditional}}
{{/block}}


{{~#block "serverAliasNames"}}
{{#httpdCloudManagerConditional}}
{{~#if httpd.serverAliasNames}}
# Alternative hostnames
{{~#each httpd.serverAliasNames}}
ServerAlias {{this}}
{{~/each}}
{{~/if}}
{{/httpdCloudManagerConditional}}
{{/block}}


{{~#block "generalSettings"}}
# Use a document root that matches the one in conf.dispatcher.d/default.farm
DocumentRoot "${DOCROOT}"
# URI dereferencing algorithm is applied at Sling's level, do not decode parameters here
AllowEncodedSlashes NoDecode
# Add header breadcrumbs for help in troubleshooting
<IfModule mod_headers.c>
  Header add X-Vhost "publish"
  # Webserver in AEM cloud service is always terminated with SSL
  RequestHeader set X-Forwarded-SSL "on"
</IfModule>
<Directory "${DOCROOT}">
  <IfModule disp_apache2.c>
    # Some items cache with the wrong mime type
    # Use this option to use the name to auto-detect mime types when cached improperly
    ModMimeUsePathInfo On
    # Use this option to avoid cache poisioning
    # Sling will return /content/image.jpg as well as /content/image.jpg/ but apache can't search /content/image.jpg/ as a file
    # Apache will treat that like a directory.  This assures the last slash is never stored in cache
    DirectorySlash Off
    # Enable the dispatcher file handler for apache to fetch files from AEM
    SetHandler dispatcher-handler
  </IfModule>
  Options FollowSymLinks
  AllowOverride None
  Require all granted
  # Insert filter
  SetOutputFilter DEFLATE
  # Don't compress images & videos
  SetEnvIfNoCase Request_URI \.(?:gif|jpe?g|png|webm|mp4)$ no-gzip dont-vary
  # Prevent clickjacking
  Header always append X-Frame-Options SAMEORIGIN
</Directory>
<IfModule disp_apache2.c>
  # Enabled to allow rewrites to take affect and not be ignored by the dispatcher module
  DispatcherUseProcessedURL  On
  # Default setting to allow all errors to come from the aem instance
  DispatcherPassError {{dispatcher.passError}}
</IfModule>
<IfModule mod_rewrite.c>
  RewriteEngine  on
  Include conf.d/rewrites/rewrite.rules
</IfModule>

# Do not allow RFC 2616 trace requests
TraceEnable Off

# Suppress leaking the exact Apache/Dispatcher version
ServerSignature Off
{{/block}}


{{~#block "downloadContentDispositionHeader"}}
# Content disposition header for downloads (wcm.io Media Handler)
<LocationMatch "^.*/dam/.*\.download_attachment\..*$">
  Header set Content-Disposition: attachment
</LocationMatch>
{{/block}}


{{~#block "cacheControl"}}
# Cache-control
Header set Cache-Control "public, must-revalidate"
{{#each httpd.headers.cacheControl}}
<LocationMatch "{{this.locationMatch}}">
  Header set Cache-Control "{{this.directives}}"
</LocationMatch>
{{~/each}}
{{/block}}

{{~#block "searchRobotHeader"}}
# Control indexing by search engine robots
# noindex for some non-html files
<LocationMatch ".*\.(css|js)$">
  Header set X-Robots-Tag "noindex"
</LocationMatch>
<LocationMatch ".*\.sitemap\.xml$">
  Header set X-Robots-Tag "noindex"
</LocationMatch>

# Exclude requests with debugClientLibs=true parameter from indexing
<If "%{QUERY_STRING} =~ /debugClientLibs=true/">
  Header set X-Robots-Tag "noindex, nofollow"
</If>
{{/block}}


{{~#block "corsHeader"}}
{{~#if httpd.corsHeader.enabled}}
# Send CORS header to client for certain requests
<LocationMatch "{{httpd.corsHeader.locationMatch}}">
  {{~#if httpd.corsHeader.allowAllHosts}}
  Header add Access-Control-Allow-Origin "*"
  {{~else}}
  SetEnvIf Origin "^(
    {{~#if httpd.corsHeader.hostWhiteList ~}}
      {{~#each httpd.corsHeader.hostWhiteList}}{{regexQuote this}}{{#unless @last}}|{{/unless}}{{/each ~}}
    {{~else ~}}
      .*
    {{~/if ~}}
  )$" AccessControlAllowOrigin=$0
  Header add Access-Control-Allow-Origin "%{AccessControlAllowOrigin}e" env=AccessControlAllowOrigin
  Header merge Vary Origin
  {{~/if}}
</LocationMatch>
{{~/if}}
{{/block}}

{{~#block "headers"}}
{{~#if httpd.headers.contentSecurityPolicy}}
# Send CSP header to client
Header set Content-Security-Policy "{{httpd.headers.contentSecurityPolicy}}"
{{~/if}}
{{~#if httpd.headers.permissionsPolicy}}
# Send permissions policy header to client
Header set Permissions-Policy "{{httpd.headers.permissionsPolicy}}"
{{~/if}}
{{~#if httpd.headers.referrerPolicy}}
# Send Referrer-Policy header to client
Header set Referrer-Policy "{{httpd.headers.referrerPolicy}}"
{{~/if}}
{{~#if httpd.headers.xssProtection}}
# Send XSS protection header to client
Header set X-XSS-Protection "{{httpd.headers.xssProtection}}"
{{~/if}}
{{/block}}

{{~#block "customVHostConfigBeforeRewrite"}}
{{#if httpd.customVHostConfig.beforeRewrite ~}}
#### Custom configuration (beforeRewrite) ####

{{httpd.customVHostConfig.beforeRewrite}}
{{~/if}}
{{/block}}


{{~#block "rewriteSlingShortUrlMapping"}}
{{~#if sling.mapping.rootPath}}
# Rewrite all paths to short url mapping except special system paths
{{~#each httpd.mapping.uriExcludeFromMapping}}
RewriteCond %{REQUEST_URI} !{{this}}
{{~/each}}
RewriteRule ^/(.+)$ {{sling.mapping.rootPath}}/$1 [PT,L]

# Do not allow access to any /content without url shortening path (except to assets)
{{~#each httpd.mapping.uriAllowContentAccess}}
RewriteCond %{REQUEST_URI} !{{this}}
{{~/each}}
{{~#if sling.mapping.allowUnshortenedPath}}
RewriteCond %{REQUEST_URI} !^{{sling.mapping.rootPath}}
{{~/if}}
RewriteRule ^/content/.* - [R=404,L,NC]
{{else ~}}
# Default mapping /content -> /
{{~#each httpd.mapping.uriExcludeFromMapping}}
RewriteCond %{REQUEST_URI} !{{this}}
{{~/each}}
RewriteRule ^/(.+)$ /content/$1 [PT,L]
{{/if ~}}
{{/block}}


{{~#block "rewriteHomepageRedirect"}}
{{~#if httpd.rootRedirect.url}}
# Root redirect to homepage
RewriteRule ^/$ {{httpd.rootRedirect.url}} [R={{httpd.rootRedirect.httpStatus}},L]
{{/if ~}}
{{/block}}

{{~#block "customVHostConfigAfter"}}
{{#if httpd.customVHostConfig.after ~}}
#### Custom configuration (after) ####

{{httpd.customVHostConfig.after}}
{{~/if}}
{{/block}}
