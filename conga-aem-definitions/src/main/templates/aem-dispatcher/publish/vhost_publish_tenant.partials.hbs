{{!-- Contains configuration snippets that can be used when building the vhost publish tenant template --}}


{{~#block "customVHostConfigBefore"}}
{{#if httpd.customVHostConfig.before ~}}
#### Custom configuration (before) ####

{{httpd.customVHostConfig.before}}
{{~/if}}
{{/block}}


{{~#block "serverName"}}
# Primary hostname
ServerName {{httpd.serverName}}
{{/block}}


{{~#block "serverAliasNames"}}
{{~#if httpd.serverAliasNames}}
# Alternative hostnames
{{~#each httpd.serverAliasNames}}
ServerAlias {{this}}
{{~/each}}
{{~/if}}
{{/block}}


{{~#block "http2"}}
{{~#if httpd.http2.enabled}}
# Enable HTTP/2
ProtocolsHonorOrder On
Protocols h2 h2c http/1.1
{{/if}}
{{/block}}


{{~#block "logSettings"}}
# Possible values include: debug, info, notice, warn, error, crit, alert, emerg.
LogLevel {{httpd.logging.level}} rewrite:{{httpd.logging.rewriteLogLevel}}
ErrorLog ${APACHE_LOG_DIR}/vhost_publish_{{httpd.serverName}}_error.log
CustomLog ${APACHE_LOG_DIR}/vhost_publish_{{httpd.serverName}}_access.log {{httpd.logging.accessLogFormat}}
{{/block}}


{{~#block "generalSettings"}}
# Do not allow RFC 2616 trace requests
TraceEnable Off

# Enable rewrite engine
RewriteEngine On
{{/block}}

{{~#block "remoteIPForwarding"}}
{{~#if httpd.remoteIPInternalProxies}}
# Trusted remote ip proxies
<IfModule remoteip>
{{~#each httpd.remoteIPInternalProxies}}
RemoteIPInternalProxy {{this}}
{{~/each}}
</IfModule>
{{~/if}}
{{/block}}

{{~#block "dispatcherModule"}}
# Enable AEM dispatcher module
<Location />
  <IfModule disp_apache2.c>
    ModMimeUsePathInfo On
    # enable dispatcher for ALL requests.
    SetHandler dispatcher-handler
  </IfModule>
</Location>
{{/block}}


{{~#block "downloadContentDispositionHeader"}}
# Content disposition header for downloads (wcm.io Media Handler)
<LocationMatch "^.*/dam/.*\.download_attachment\..*$">
  Header set Content-Disposition: attachment
</LocationMatch>
{{/block}}


{{~#block "cacheControl"}}
# Cache-control
Header set Cache-Control "public, must-revalidate"
{{#each httpd.headers.cacheControl}}
<LocationMatch "{{this.locationMatch}}">
  Header set Cache-Control "{{this.directives}}"
</LocationMatch>
{{/each~}}
{{/block}}

{{~#block "sslEnforce"}}
{{~#if httpd.ssl.enforce}}
# SSL enforcing
# Enable HSTS if SSL is enforced, even on http (e.g. when running behind a ssl offloader)
Header always set Strict-Transport-Security "max-age=31536000"
{{/if}}
{{/block}}

{{~#block "searchRobotHeader"}}
# Control indexing by search engine robots
# noindex for some non-html files
<LocationMatch ".*\.(css|js)$">
  Header set X-Robots-Tag "noindex"
</LocationMatch>
<LocationMatch ".*\.sitemap\.xml$">
  Header set X-Robots-Tag "noindex"
</LocationMatch>

# Exclude requests with debugClientLibs=true parameter from indexing
<If "%{QUERY_STRING} =~ /debugClientLibs=true/">
  Header set X-Robots-Tag "noindex, nofollow"
</If>
{{/block}}


{{~#block "accessRestrictionsLocationFilter"}}
# Location filter
{{#each httpd.accessRestriction.locationFilter~}}
{{aemHttpdFilter this allowFromKey="httpd.accessRestriction.adminAccessFromIp" allowFromHostKey="httpd.accessRestriction.adminAccessFromHost"}}
{{/each~}}
{{/block}}


{{~#block "accessRestrictionsDispatcherFlush"}}
# Allow dispatcher flushing only from defined hosts
<Location "/dispatcher">
  <IfVersion < 2.4>
    Order Deny,Allow
    Deny from all
{{~#if httpd.accessRestriction.dispatcherFlushFromIp}}
    Allow from {{httpd.accessRestriction.dispatcherFlushFromIp}}
{{~/if}}
{{~#if httpd.accessRestriction.dispatcherFlushFromHost}}
    Allow from {{httpd.accessRestriction.dispatcherFlushFromHost}}
{{~/if}}
  </IfVersion>
  <IfVersion >= 2.4>
    Require all denied
{{~#if httpd.accessRestriction.dispatcherFlushFromIp}}
    Require ip {{httpd.accessRestriction.dispatcherFlushFromIp}}
{{~/if}}
{{~#if httpd.accessRestriction.dispatcherFlushFromHost}}
    Require host {{httpd.accessRestriction.dispatcherFlushFromHost}}
{{~/if}}
  </IfVersion>
</Location>
{{/block}}


{{~#block "rewriteEnforcePrimaryHostname"}}
# Make sure primary hostname is always used - but don't rewrite the dispatcher invalidation URL
RewriteCond %{REQUEST_URI} !^/dispatcher/invalidate.cache
RewriteCond %{HTTP_HOST} !^{{regexQuote (httpHost httpd.serverName port=httpd.serverPort)}}$ [NC]
RewriteRule ^(.*)$ http://{{httpHost httpd.serverName port=httpd.serverPort}}$1 [R=301,L]
{{/block}}


{{~#block "corsHeader"}}
{{~#if httpd.corsHeader.enabled}}
# Send CORS header to client for certain requests
<LocationMatch "{{httpd.corsHeader.locationMatch}}">
  {{~#if httpd.corsHeader.allowAllHosts}}
  Header add Access-Control-Allow-Origin "*"
  {{~else}}
  SetEnvIf Origin "^(
    {{~#if httpd.corsHeader.hostWhiteList ~}}
      {{~#each httpd.corsHeader.hostWhiteList}}{{regexQuote this}}{{#unless @last}}|{{/unless}}{{/each ~}}
    {{~else ~}}
      .*
    {{~/if ~}}
  )$" AccessControlAllowOrigin=$0
  Header add Access-Control-Allow-Origin "%{AccessControlAllowOrigin}e" env=AccessControlAllowOrigin
  Header merge Vary Origin
  {{~/if}}
</LocationMatch>
{{~/if}}
{{/block}}

{{~#block "headers"}}
{{~#if httpd.headers.contentSecurityPolicy}}
# Send CSP header to client
Header set Content-Security-Policy "{{httpd.headers.contentSecurityPolicy}}"
{{~/if}}
{{~#if httpd.headers.referrerPolicy}}
# Send Referrer-Policy header to client
Header set Referrer-Policy "{{httpd.headers.referrerPolicy}}"
{{~/if}}
{{~#if httpd.headers.xssProtection}}
# Send XSS protection header to client
Header set X-XSS-Protection "{{httpd.headers.xssProtection}}"
{{~/if}}
{{/block}}

{{~#block "customVHostConfigBeforeRewrite"}}
{{#if httpd.customVHostConfig.beforeRewrite ~}}
#### Custom configuration (beforeRewrite) ####

{{httpd.customVHostConfig.beforeRewrite}}
{{~/if}}
{{/block}}


{{~#block "rewriteSlingShortUrlMapping"}}
{{~#if sling.mapping.rootPath}}
# Rewrite all paths to short url mapping except special system paths
{{~#each httpd.mapping.uriExcludeFromMapping}}
RewriteCond %{REQUEST_URI} !{{this}}
{{~/each}}
RewriteRule ^/(.+)$ {{sling.mapping.rootPath}}/$1 [PT,L]

# Do not allow access to any /content without url shortening path (except to assets)
{{~#each httpd.mapping.uriAllowContentAccess}}
RewriteCond %{REQUEST_URI} !{{this}}
{{~/each}}
{{~#if sling.mapping.allowUnshortenedPath}}
RewriteCond %{REQUEST_URI} !^{{sling.mapping.rootPath}}
{{~/if}}
RewriteRule ^/content/.* - [R=404,L,NC]
{{/if ~}}
{{/block}}


{{~#block "rewriteHomepageRedirect"}}
{{~#if httpd.rootRedirect.url}}
# Root redirect to homepage
{{#if httpd.ssl.enforce}}
{{ensureProperties "httpd.serverNameSsl" ~}}
RewriteRule ^/$ https://{{httpHostSsl httpd.serverName port=httpd.serverPortSsl}}{{httpd.rootRedirect.url}} [R={{httpd.rootRedirect.httpStatus}},L]
{{~ else}}
RewriteRule ^/$ {{httpd.rootRedirect.url}} [R={{httpd.rootRedirect.httpStatus}},L]
{{/if ~}}
{{/if ~}}
{{/block}}


{{~#block "customVHostConfigAfter"}}
{{#if httpd.customVHostConfig.after ~}}
#### Custom configuration (after) ####

{{httpd.customVHostConfig.after}}
{{~/if}}
{{/block}}
