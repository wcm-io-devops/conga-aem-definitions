# Example Test Environment

nodes:

- node: aem-author
  roles:
  - role: aem-cms
    variant: aem-author
  config:
    replication.author.publishTargets:
    - name: publish1
      url: http://localhost:4503
      transportUser: admin
      transportPassword: admin

- node: aem-publish
  roles:
  - role: aem-cms
    variant: aem-publish
  config:
    replication.publish.flushTarget:
      name: dispatcher1
      url: http:/www.sample1.com

- node: webserver
  roles:
  - role: aem-dispatcher
    variants:
    - aem-author
    - ssl
    - http2
    config:
      httpd:
        serverName: author.sample.com
        accessRestriction:
          locationFilter:
          - _merge_
          - location: /location1Allow
            type: allow
          - location: /location2Deny
            type: deny
          - location: /admin
            type: allow
      dispatcher:
        configPath: /opt/apache2/dispatcher.d/dispatcher.any
        cache:
          rootPath: /var/cache/author1
        renderInstance:
          host: localhost
          port: 4502
  - role: aem-dispatcher
    variants:
    - aem-publish
    - ssl
    - http2
    config:
      httpd:
        accessRestriction:
          locationFilter:
          - location: /location3Allow
            type: allow
          - location: /location4Deny
            type: deny
          - location: /admin
            type: allow
          - _merge_
      dispatcher:
        configPath: /opt/apache2/dispatcher.d/dispatcher.any
        cache:
          rootPath: /var/cache/publish1
          statFilesLevel: 3
          allowAuthorized: true
          serveStaleOnError: true
          serveStaleGracePeriodSec: 5
          headers:
          - Cache-Control
          - Content-Disposition
          - Content-Type
          - Expires
          - Last-Modified
          - X-Content-Type-Options
          enableTTL: true
        renderInstance:
          host: localhost
          port: 4503
          timeoutMs: 10000
        # add a new forwarded client header
        forwardClientHeaders:
        - _merge_
        - X-My-Custom-Header
        # add a new filter rule
        filter:
        - _merge_
        - url: /path/to/resources/
          type: allow

- node: webserver-cloud
  roles:
  - role: aem-dispatcher-cloud
    variants:
    - aem-publish
    config:
      httpd:
        accessRestriction:
          locationFilter:
          - location: /location3Allow
            type: allow
          - location: /location4Deny
            type: deny
          - location: /admin
            type: allow
          - _merge_
        docroot: "\\${PUBLISH_DOCROOT}"
      dispatcher:
        cache:
          rootPath: /var/cache/publish1
          statFilesLevel: 3
          allowAuthorized: true
          serveStaleOnError: true
          serveStaleGracePeriodSec: 5
          headers:
          - Cache-Control
          - Content-Disposition
          - Content-Type
          - Expires
          - Last-Modified
          - X-Content-Type-Options
          enableTTL: true
        renderInstance:
          host: localhost
          port: 4503
          timeoutMs: 10000
        # add a new forwarded client header
        forwardClientHeaders:
        - _merge_
        - X-My-Custom-Header
        # add a new filter rule
        filter:
        - _merge_
        - url: /path/to/resources/
          type: allow

config:
  jvm.path: /usr/lib/jvm/jdk-8-oracle-x64

  quickstart:
    enableDavEx: true
    adminUser:
      username: admin
      password: mynewpwd
      passwordOld: admin

  httpd:
    logging:
      level: error
      accessLogFormat: '"%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""'
    accessRestriction:
      adminAccessFromIp: 10.0.0.0/255.0.0.0
      adminAccessFromHost: www.example.org
      dispatcherFlushFromIp: 127.0.0.1
      dispatcherFlushFromHost: localhost
    ssl:
      certificateFile: /etc/ssl/certs/sample.crt
      certificateKeyFile: /etc/ssl/private/sample.key
      cACertificatePath: /etc/ssl/certs
      cACertificateFile: /etc/ssl/certs/sample.pem

  sling:
    caconfig:
      overrides:
        "/content":
        - io.wcm.handler.url.SiteConfig/siteUrl="http://site1"
        - io.wcm.handler.url.SiteConfig/siteUrlAuthor="https://author.site1"


tenants:

- tenant: sample1.com
  config:
    httpd:
      serverAliasNames:
      - www.sample1.com
      - "*"
      rootRedirect.url: /en.html
      ssl.enforce: true
      ssl.skipCopyCertificates: true
      customVHostConfig:
        before: |
          # This is custom configuration example
          # at the top of the file
        beforeRewrite: |
          # This is custom configuration example
          # before the rewrite rules
        after: |
          # This is custom configuration example
          # at the bottom of the file
    sling.mapping.rootPath: /content/sample1

- tenant: sample2.com
  config:
    httpd:
      serverName: nonssl-sample2.com
      serverNameSsl: ssl-sample2.com
      serverAliasNames:
      - www.sample2.com
      serverAliasNamesSsl:
      - "*"
      - www.ssl-sample2.com
      serverPort: 8080
      serverPortSsl: 8443
      rootRedirect.url: /de.html
      headers:
        contentSecurityPolicy: "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.sample1.com;"
        xssProtection: "1; mode=block"
        referrerPolicy: "strict-origin-when-cross-origin"
    sling.mapping.rootPath: /content/sample2
